---
- block:
  # root

  - name: 'Uninstall conflicting Packages'
    package:
      name:
        - iptables
      state: absent
      force: true

  - name: 'Uninstall conflicting Python Packages'
    pip:
      name: "{{ item }}"
      state: absent
    with_items:
      - "bcrypt"
      - "jinja"
      - "paramiko"
      - "pynacl"

  - name: 'Install KVM'
    package:
      name:
        - ansible-core
        - bridge-utils
        - cockpit
        - cockpit-machines
        - cockpit-pcp
        - cockpit-podman
        - dmidecode
        - dnsmasq
        - ebtables
        - gnu-netcat
        - iptables-nft
        - libvirt
        - netctl
        - ovmf
        - packagekit
        - python-vagrant
        - python-yaml
        - qemu-full
        - swtpm
        - virt-install
      state: latest

  - name: "Get stat for /usr/bin/nix-env"
    stat:
      path: /usr/bin/nix-env
    register: nix_env_command

  - name: 'Install vagrant via arch repositories'
    package:
      name:
        - vagrant
      state: latest
    when: not nix_env_command.stat.exists

  - name: "Install vagrant via nix repositories"
    shell:
      cmd: "nix-env -iA nixpkgs.vagrant"
    when: nix_env_command.stat.exists

  - name: 'Install KVM GUI'
    package:
      name:
        - virt-manager
        - virt-viewer
      state: latest
    when: install_kvm_gui

  - name: 'Add users to kvm groups'
    user:
      name: '{{ username }}'
      groups: '{{ item }}'
      append: 'yes'
    with_items:
      - 'kvm'
      - 'libvirt'

  - name: "Set unix_sock_group in libvirtd config"
    lineinfile:
      dest: /etc/libvirt/libvirtd.conf
      regexp: "^#unix_sock_group =.*"
      line: "unix_sock_group = \"libvirt\""

  - name: "Set unix_sock_rw_perms in libvirtd config"
    lineinfile:
      dest: /etc/libvirt/libvirtd.conf
      regexp: "^#unix_sock_rw_perms =.*"
      line: "unix_sock_rw_perms = \"0770\""

  - name: "Set user in qemu config"
    lineinfile:
      dest: /etc/libvirt/qemu.conf
      regexp: "^#user =.*"
      line: "user = \"{{ username }}\""

  - name: 'Enable kvm systemd service'
    ansible.builtin.systemd:
      name: '{{ item }}'
      state: 'started'
      enabled: 'yes'
    with_items:
      - 'libvirtd'
      - 'libvirt-guests'
      - 'cockpit.socket'
      - 'pmcd.service'
      - 'pmlogger.service'
      - 'podman.socket'

  - name: "Fix libvirt-guests"
    replace:
      path: /usr/lib/libvirt/libvirt-guests.sh
      regexp: '(^ON_SHUTDOWN=)(.*)$'
      replace: '\1"shutdown"'

  - name: "Fetch Vagrant Plugin List for root"
    raw:
      cmd: vagrant plugin list
      executable: /bin/bash
    register: vagrant_plugin_list
    changed_when: "'libvirt' not in vagrant_plugin_list.stdout"

  - name: "Install vagrant-libvirt plugin for root"
    raw:
      cmd: vagrant plugin install vagrant-libvirt
      executable: /bin/bash
    when: '"libvirt" not in vagrant_plugin_list.stdout'

  - name: 'Install KVM Python Packet for root'
    pip:
      name: "{{ item }}"
    with_items:
      - "lxml"

  become: yes



- block:
  # user

  - name: "Fetch Vagrant Plugin List for user"
    raw:
      cmd: vagrant plugin list
      executable: /bin/bash
    register: vagrant_plugin_list
    changed_when: "'libvirt' not in vagrant_plugin_list.stdout"

  - name: "Install vagrant-libvirt plugin for user"
    raw:
      cmd: vagrant plugin install vagrant-libvirt
      executable: /bin/bash
    when: '"libvirt" not in vagrant_plugin_list.stdout'

  - name: 'Install KVM Python Packet for user'
    pip:
      name: "{{ item }}"
    with_items:
      - "lxml"
